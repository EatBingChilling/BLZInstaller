name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Download keystore file
      run: |
        echo "${{ secrets.KEYSTORE_FILE }}" > keystore.keystore
        echo "Keystore file downloaded."

    - name: Create signing properties
      run: |
        echo "storeFile=$(pwd)/keystore.keystore" > signing.properties
        echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> signing.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> signing.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> signing.properties
        echo "signing.properties file created."

    - name: Verify keystore and signing properties
      run: |
        ls -l keystore.keystore
        cat signing.properties

    - name: Build Release
      run: ./gradlew assembleRelease

    - name: Build Debug
      run: ./gradlew assembleDebug

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}  # 使用运行编号作为标签
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (Release APK)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app/build/outputs/apk/release/app-release.apk
        asset_name: app-release-${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload Release Asset (Debug APK)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app/build/outputs/apk/debug/app-debug.apk
        asset_name: app-debug-${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
